package com.sbs.edu;

import javax.servlet.http.HttpServlet;

/*
 * 서블릿 변수
 */

/*
 * - 서블릿 동시 요청
 * 웹 프로그램을 개발하는 방식은 두 가지가 있다.
 * 웹 서버의 직접적인 호출로 실행하는 CGI 방식과 애플리케이션 서버가 실행하는 방식.
 * 지금 학습하고 있는 서블릿은 서블릿 컨테이너라고 하는 웹 애플리케이션 서버가 실행하는 방식이다.
 * CGI와 서블릿 실행 방식은 서로 다르다.
 * 
 * CGI 실행 방식은 여러 사용자 요청이 빈번한 성격의 웹 서비스로는 적합하지 않다.
 * 클라이언트의 요청 수에 비례하여 프로세스가 만들어지고 그만큼 메모리 사용량도 함께 증가하기 때문이다.
 * 따라서 대량의 트래픽이 발생할 수 있는 서비스에는 서버에 부하가 가중될 수 있다.
 * 
 * 서블릿은 서블릿 컨테이너가 실행하며 해당 서블릿의 최초의 요청인지에 따라 실행 순서가 달라진다.
 * 최초의 요청이면 서블릿 객체의 메모리 로딩과 객체 생성, 그리고 init() 메서드가 호출된다.
 * 이러한 작업을 진행하기 전에 프로세스가 생성되며, 이 프로세스 안에서 작업을 진행한다.
 * 
 * init() 메서드가 실행이 끝난 다음에는 service() 메서드가 호출된다.
 * service() 메서드는 서블릿의 최초 요청 여부와 상관없이 서블릿 요청이 있을 때마다 실행된다.
 * service() 메서드는 최초 요청시 만들어진 프로세스 안에 작은 프로세스를 만들고, 그 작은 프로세스 안에서 실행된다.
 * 이와 같이 작은 프로세스를 "Thread(스레드)"라고 한다.
 * 
 * 최초의 요청일 때 프로세스를 만들고 그 안에 스레드를 만들어서 service()메서드를 실행하며,
 * 두 번째 이후의 요청부터는 이미 만들어진 프로세스 안에 service() 메서드를 실행하기 위한 스레드만 새로 생성한 다음,
 * 이 스레드 안에서 service() 메서드를 실행한다.
 * 
 * 메모리를 로딩하는 데이터 양을 보면 최초 요청 시에는 5만큼의 데이터를 로딩하였다면,
 * 두 번째 이후의 요청부터는 기존의 프로세스를 그대로 사용하고,
 * 새로운 스레드를 만들기 위한 데이터만 로딩하기 때문에 메모리 사용량이 적어진다.
 * 새로운 스레드를 만들기 위해 메모리에 로딩하는 데이터가 2라고 가정한다면,
 * 두 번째 이후부터는 2만큼의 데이터만 로딩하면 된다.
 */

/*
 * - 서블릿 변수의 특징
 * 서블릿을 개발하면서 변수를 사용할 때 멤버 변수인지 지역 변수인지 구분하여 사용할 수 있어야한다.
 * 서블릿은 웹 서버에서 실행하는 프로그램으로써 여러 클라이언트가 하나의 서블릿을 동시에 실행할 수 있어야하므로
 * 여러 클라이언트가 공통으로 사용하는 데이터도, 각각의 클라이언트가 독립적으로 사용해야 하는 데이터도 필요할 수 있다.
 * 하나의 서블릿에 여러 클라이언트가 독립적으로 사용해야하는 데이터는 지역변수로 선언해야한다.
 * 
 * 서블릿은 하나의 프로세스를 생성한 다음, 동일한 서블릿을 요청하는 클라이언트에 대하여 공통적으로 프로세스를 사용하여
 * service() 메서드를 실행하기 위한 스레드만 클라이언트 별로 독립적으로 생성하여 실행한다.
 * -> 서블릿의 지역변수는 각 요청마다 스레드별로 스택 영역에 할당되어 사용되지만,
 * 멤버변수는 힙 영역에 할당되어 서블릿을 실행하는 여러 스레드에서 공유한다.
 */

public class L_0_ServletValue extends HttpServlet {

}
